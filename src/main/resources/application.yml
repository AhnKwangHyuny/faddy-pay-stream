spring:
  application:
    name: "faddy-payments-app"

  datasource:
    url: jdbc:mysql://localhost:13306/faddy_labs?serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true
    username: faddy
    password: testlabs
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connectionInitSql: SET NAMES utf8mb4

  thymeleaf:
    cache: false
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html

error-trace:
  stacktrace: true

my:
  name: hyun-test
  age: 29

---
spring:
  flyway:
    enabled: false
  config:
    activate:
      on-profile: aws
  datasource:
    url: jdbc:mysql://fastcampus-ecommerce-1.cdm6ewsssk7l.us-east-2.rds.amazonaws.com:3306/faddy_labs?serverTimezone=UTC&characterEncoding=UTF-8
    username: faddy
    password: testlabs
    driver-class-name: com.mysql.cj.jdbc.Driver
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        auto_quote_keyword: false
        globally_quoted_identifiers: false
        format_sql: true     # 쿼리 로그 포맷 (정렬)
        show_sql: true       # 쿼리 로그 출력
  jdbc:
    template:
      batch-size: 100
  kafka:
    producer:
      bootstrap-servers: ["172.31.5.117:19094"]
      schema-registry-url: "http://172.31.5.117:8085"
    consumer:
      bootstrap-servers: ["172.31.5.117:19094"]
      group-id: "settlements_1"
      schema-registry-url: "http://172.31.5.117:8085"

pg:
  tosspayments:
    baseUrl: "https://api.tosspayments.com/v1"
    privateKey: "test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6"
    clientKey: "test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm"

my:
  name: hyun_dev
  age: 29

logging:
  level:
    org:
      hibernate:
        orm:
          jdbc:
            bind: TRACE

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://localhost:13306/faddy_labs?serverTimezone=UTC&characterEncoding=UTF-8
    username: faddy
    password: testlabs
    driver-class-name: com.mysql.cj.jdbc.Driver
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        auto_quote_keyword: false
        globally_quoted_identifiers: false
        format_sql: true     # 쿼리 로그 포맷 (정렬)
        show_sql: true       # 쿼리 로그 출력
  jdbc:
    template:
      batch-size: 100
  kafka:
    producer:
      bootstrap-servers: ["localhost:19094"]
      schema-registry-url: "http://localhost:8085"
    consumer:
      bootstrap-servers: ["localhost:19094"]
      group-id: "settlements_1"
      schema-registry-url: "http://localhost:8085"

pg:
  tosspayments:
    baseUrl: "https://api.tosspayments.com/v1/"
    privateKey: "test_sk_26DlbXAaV06m2mEvvqx18qY50Q9R:"
    clientKey: "test_ck_ex6BJGQOVD9lxQ2E1DokrW4w2zNb"

my:
  name: hyun_dev
  age: 34

logging:
  level:
    org:
      hibernate:
        orm:
          jdbc:
            bind: TRACE

---
spring:
  config:
    activate:
      on-profile: dev-docker
  datasource:
    url: jdbc:mysql://mysql:3306/faddy_labs?serverTimezone=UTC&characterEncoding=UTF-8
    username: faddy
    password: testlabs
    driver-class-name: com.mysql.cj.jdbc.Driver
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        auto_quote_keyword: false
        globally_quoted_identifiers: false
        format_sql: true     # 쿼리 로그 포맷 (정렬)
        show_sql: true       # 쿼리 로그 출력
  jdbc:
    template:
      batch-size: 100
  kafka:
    producer:
      bootstrap-servers: ["kafka-1:19092"]
      schema-registry-url: "http://172.26.0.13:8085"
    consumer:
      bootstrap-servers: ["kafka-1:19092"]
      group-id: "settlements_1"
      schema-registry-url: "http://172.26.0.13:8085"

pg:
  tosspayments:
    baseUrl: "https://api.tosspayments.com/v1/"
    privateKey: "test_sk_D4yKeq5bgrpKRd0JYbLVGX0lzW6Y:"
    clientKey: "test_ck_ex6BJGQOVD9lxQ2E1DokrW4w2zNb"

my:
  name: hyun_dev2
  age: 34

logging:
  level:
    org:
      hibernate:
        orm:
          jdbc:
            bind: TRACE

---
spring:
  config:
    activate:
      on-profile: test
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        auto_quote_keyword: false
        globally_quoted_identifiers: false
        format_sql: true     # 쿼리 로그 포맷 (정렬)
        show_sql: true       # 쿼리 로그 출력